name: training
on:
  push:
    branches: [main, beta, staging]
    # only push docker images if the Dockerfile or workflow .yml has changed
    paths:
      - "docker_containers/**/Dockerfile"
      - ".github/workflows/training.yml"
    tags:
      - "*.*.*"
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  changes:
    runs-on: ubuntu-latest
    # Required permissions
    outputs:
      # Expose matched filters as job 'packages' output variable
      packages: ${{ steps.filter.outputs.changes }}

    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          base: ${{ github.ref }}
          list-files: "json"
          filters: |
            cell_comm: docker_containers/cell_comm/Dockerfile

  build-and-push-image:
    # needs: login
    needs: changes
    runs-on: ubuntu-latest
    # skip if matrix empty
    if: ${{ needs.changes.outputs.packages !='{}' && needs.changes.outputs.packages !='[]' && needs.changes.outputs.packages !=''}}
    permissions:
      contents: read
      packages: write

    strategy:
      fail-fast: false
      matrix:
        # Parse JSON array containing names of all filters matching any of changed files
        # e.g. ['package1', 'package2'] if both package folders contains changes
        package: ${{ fromJson(needs.changes.outputs.packages) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/macomics/macomics/${{ matrix.package }} # The image name for your container registry
          # flavor: |
          #   latest=auto
          tags: |
            type=schedule # Generate a tag based on the schedule, e.g. nightly-2021-01-01
            type=ref,event=branch # Generate a tag based on the branch name, e.g. main
            type=ref,event=pr # Generate a tag based on the pull request number, e.g. pr-2
            type=semver,pattern={{version}},source=label:org.opencontainers.image.version # Generate a tag based on the version number, e.g. v1.2.3
            type=semver,pattern={{major}}.{{minor}} # Generate a tag based on the major and minor version numbers, e.g. v1.2
            type=semver,pattern={{major}} # Generate a tag based on the major version number, e.g. v1
            type=sha # Generate a tag based on the commit SHA, e.g. d3b1165f09e8bc73a439a09d9ae6ef17088ed1d
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: false

          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker_containers/${{ matrix.package }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }} # Use the tags generated by the metadata action
          labels: ${{ steps.meta.outputs.labels }} # Use the labels generated by the metadata action
          build-args: GITHUB_PAT=${{ secrets.GITHUB_TOKEN }}
